stages:
  - preparation
  - testing
  - deploy

image: lorisleiva/laravel-docker:8.1

# Variables
variables:
  MYSQL_ROOT_PASSWORD: root
  MYSQL_USER: mysql_user
  MYSQL_PASSWORD: mysql_password
  MYSQL_DATABASE: mysql_db
  DB_HOST: mysql

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

composer:
  stage: preparation
  script:
    - php -v
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    - cp .env.example .env
    - php artisan key:generate
    - php artisan storage:link
  artifacts:
    paths:
      - vendor/
      - .env
    expire_in: 1 days
    when: always
  cache:
    paths:
      - vendor/

phpunit:
  stage: testing
  services:
    - name: mariadb:10
  # Download the artifacts for these jobs
  dependencies:
    - composer
  script:
    - php artisan storage:link
    - ./vendor/phpunit/phpunit/phpunit -v --colors=never --stderr --log-junit phpunit-report.xml
  artifacts:
    paths:
      - ./storage/app/log
      - ./storage/logs
    expire_in: 1 days
    when: on_failure
    reports:
      junit: phpunit-report.xml

codestyle:
  stage: testing
  script:
    - phpcs --extensions=php app
  dependencies: []

security-checker:
  stage: testing
  needs:
    - job: composer
      artifacts: true
  script:
    - vendor/bin/security-checker security:check composer.lock

deploy_dev:
  stage: deploy
  needs:
    - job: composer
      artifacts: true
  script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$DEV_SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - echo "DEPLOY_SERVER_DEV=$DEPLOY_SERVER_DEV" >> .env
    - echo "DEPLOY_PATH_DEV=$DEPLOY_PATH_DEV" >> .env
    - ./vendor/bin/envoy run deploy
  only:
    - dev
# deploy_prod:
#   stage: deploy
#   needs:
#     - job: composer
#       artifacts: true
#   script:
#     - eval $(ssh-agent -s)
#     - ssh-add <(echo "$PROD_SSH_PRIVATE_KEY")
#     - mkdir -p ~/.ssh
#     - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
#     - echo "DEPLOY_PROD_USER=$DEPLOY_PROD_USER" >> .env
#     - echo "DEPLOY_PROD_HOST=$DEPLOY_PROD_HOST" >> .env
#     - echo "DEPLOY_PROD_PATH=$DEPLOY_PROD_PATH" >> .env
#     - ./vendor/bin/envoy run deploy --server=prod
#   only:
#     - master
#   when: manual
